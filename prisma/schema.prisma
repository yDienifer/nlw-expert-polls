// Este arquivo representa o esquema do nosso banco de dados, oferecendo uma representação fiel das tabelas e colunas.

// Configuração do gerador Prisma Client para JavaScript.
generator client {
  provider = "prisma-client-js"
}

// Configuração da fonte de dados para o banco de dados PostgreSQL, utilizando a URL do ambiente.
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Definição do modelo "Poll" que representa uma tabela no banco de dados.
model Poll {
  id    String @id @default(uuid()) // Chave primária.
  title String // Coluna que armazena o título da enquete.

  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  options   PollOption[] @relation("options") // Relacionamento com a tabela PollOption.
  votes     Vote[]
}

model PollOption {
  id    String @id @default(uuid())
  title String

  // Criando um relacionamento entre a tabela Poll e a PollOption.
  // associatedPoll: É o nome do campo que será usado para acessar o relacionamento quando estiver. consultando dados.
  associatedPoll Poll   @relation("options", fields: [pollId], references: [id])
  pollId         String
  votes          Vote[]
}

model Vote {
  id             Int        @id @default(autoincrement())
  sessionId      String
  pollOptionId   String
  pollId         String
  createdAt      DateTime   @default(now())
  pollOption     PollOption @relation(fields: [pollOptionId], references: [id])
  associatedPoll Poll       @relation(fields: [pollId], references: [id])

  // Impede que o usuário vote duas vezes na mesma enquete.
  @@unique([sessionId, pollId])
}

// Para criar a tabela no banco de dados, execute o comando: npx prisma migrate dev.,
